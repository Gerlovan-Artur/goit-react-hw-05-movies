{"version":3,"file":"static/js/287.24ff9b73.chunk.js","mappings":"mOAGaA,EAAQC,EAAAA,EAAAA,IAAH,yDAKLC,EAAMD,EAAAA,EAAAA,IAAH,2OAUHE,EAAOF,EAAAA,EAAAA,EAAH,mIAOJG,GAASH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,mE,SCpBNK,EAAe,kCAErB,SAASC,EAAT,GAGH,IAAD,IAFDC,MAASC,EAER,EAFQA,YAAaC,EAErB,EAFqBA,MAAOC,EAE5B,EAF4BA,KAAMC,EAElC,EAFkCA,GAAIC,EAEtC,EAFsCA,aACvCC,EACC,EADDA,SAEA,OACE,yBACE,SAACV,EAAD,CAAQW,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMH,GAA5C,UACE,UAACZ,EAAD,YACE,SAACF,EAAD,CACEkB,IACET,EACI,UAAGH,GAAiBG,EACpB,mGAENU,IAAKT,GAASC,KAEhB,SAACR,EAAD,CAAMiB,MAAO,CAAEC,SAAU,QAAzB,SAAoCX,GAASC,KAC7C,UAACR,EAAD,oBAAaU,EAAaS,QAAQ,GAAlC,iBAKT,C,sFC3BYC,E,OAAOtB,EAAAA,GAAH,0M,SCGV,SAASuB,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OACpBX,GAAWY,EAAAA,EAAAA,MAEjB,OACE,SAACH,EAAD,UACGE,EAAOE,KAAI,SAAAnB,GACV,OAAO,SAACD,EAAA,EAAD,CAAWC,MAAOA,EAAOM,SAAUA,GAAeN,EAAMI,GAChE,KAGN,C,+LCbKgB,EAAU,mCACVC,EAAW,gCACXC,EAAe,qBACfC,EAAgB,eAEf,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,UAClBJ,GADkB,OACPC,EADO,oBACiBF,IAFnC,cACCM,EADD,yBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBH,EAAAA,EAAAA,IAAA,UAClBJ,GADkB,OACPE,EADO,oBACkBH,EADlB,kBACmCQ,IAFrD,cACCF,EADD,yBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,uFACkBqB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDjB,EADC,oBACagB,IAF/B,cACCM,EADD,yBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1B,GAA9B,uFACkBqB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDjB,EADC,4BACqBgB,IAFvC,cACCM,EADD,yBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+B3B,GAA/B,uFACkBqB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDjB,EADC,4BACqBgB,IAFvC,cACCM,EADD,yBAIEA,GAJF,kE,qHCjCMM,E,OAAQvC,EAAAA,GAAH,0F,mCCGLwC,EAAO,WAClB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,MAAoBe,MAAK,SAAAtB,GAAM,OAAIkB,EAAUlB,EAAOuB,KAAKC,QAA1B,IAAoCC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,QAAnB,GAC/E,GAAE,KAGD,iCACE,SAACX,EAAD,6BACCI,GAAS,oCACV,SAACpB,EAAA,EAAD,CAAWC,OAAQA,MAGxB,EAED,G","sources":["components/MovieList/MovieItem/MovieItem.styled.js","components/MovieList/MovieItem/MovieItem.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/getMovies.js","components/pages/Home/Home.styled.js","components/pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const Box = styled.div`\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0px 10px 15px 2px rgba(0, 0, 0, 0.5);\n  transition: transform cubic-bezier(0.165, 0.84, 0.44, 1) 500ms;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Text = styled.p`\n  height: 30px;\n  font-weight: 200;\n  padding: 10px 10px 5px;\n  display: flex;\n  align-items: center;\n`;\nexport const MyLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n`;","import { Image, Text } from './MovieItem.styled';\nimport { MyLink } from './MovieItem.styled';\nimport { Box } from './MovieItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function MovieItem({\n  movie: { poster_path, title, name, id, vote_average },\n  location,\n}) {\n  return (\n    <li>\n      <MyLink to={`/movies/${id}`} state={{ from: location }}>\n        <Box>\n          <Image\n            src={\n              poster_path\n                ? `${BASE_IMG_URL}` + poster_path\n                : 'https://static7.depositphotos.com/1021974/739/i/950/depositphotos_7397821-stock-photo-cinema.jpg'\n            }\n            alt={title || name}\n          />\n          <Text style={{ fontSize: '20px' }}>{title || name}</Text>\n          <Text>Rate: {vote_average.toFixed(1)} / 10</Text>\n        </Box>\n      </MyLink>\n    </li>\n  );\n}\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    profile_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,    \n      vote_average: PropTypes.string.isRequired,\n    }),\n  };\n    ","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n    text-decoration: none;\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-template-rows: repeat(4, 1fr);\n    grid-gap: 30px;\n    margin: 30px auto;\n`","import { useLocation } from 'react-router-dom';\nimport { MovieItem } from './MovieItem/MovieItem';\nimport { List } from './MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => {\n        return <MovieItem movie={movie} location={location} key={movie.id} />;\n      })}\n    </List>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.object,\n};","import axios from 'axios';\n\nconst API_KEY = 'd94f1660bc08f9c6e6ef31fbeee3057f';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TRENDING_URL = 'trending/movie/day';\nconst BY_SEARCH_URL = 'search/movie';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(\n    `${BASE_URL}${TRENDING_URL}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieBySearch(query) {\n  const response = await axios.get(\n    `${BASE_URL}${BY_SEARCH_URL}?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n}\n\nexport async function getMovieDetails(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieActors(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieReviews(id) {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}","import styled from '@emotion/styled';\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n`;","import { Title } from './Home.styled';\nimport { useEffect, useState } from 'react';\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { getTrendingMovies } from 'components/getMovies';\n\nexport const Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getTrendingMovies().then(movies => setMovies(movies.data.results)).catch(error => setError(error.message))\n  }, [])\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {error && 'Something wrong, reload the page'}\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;"],"names":["Image","styled","Box","Text","MyLink","Link","BASE_IMG_URL","MovieItem","movie","poster_path","title","name","id","vote_average","location","to","state","from","src","alt","style","fontSize","toFixed","List","MovieList","movies","useLocation","map","API_KEY","BASE_URL","TRENDING_URL","BY_SEARCH_URL","getTrendingMovies","axios","response","getMovieBySearch","query","getMovieDetails","getMovieActors","getMovieReviews","Title","Home","useState","setMovies","error","setError","useEffect","then","data","results","catch","message"],"sourceRoot":""}